{"ast":null,"code":"var _jsxFileName = \"/Users/Jake/Documents/GitHub/ReactJS/src/components/Article.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from './Table';\nimport { $, jQuery } from 'jquery';\nimport _ from 'lodash';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import { DropDownList } from '@progress/kendo-react-dropdowns';\n//import Dropdown from './Dropdown.js';\n\nclass Article extends Component {\n  async componentDidMount() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      data: data\n    });\n  }\n\n  onChangeSelect(event) {\n    console.log(event);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      data: [],\n      sort: 'asc',\n      sortField: 'title'\n    };\n\n    this.onSort = sortField => {\n      const clonedData = this.state.data.concat();\n      const sortType =\n      /*this.state.sort === 'asc' ? 'desc' :*/\n      'asc';\n\n      const orderedData = _.orderBy(clonedData, sortField, sortType);\n\n      console.log(this.state.sortField);\n      this.setState({\n        data: orderedData,\n        sort: sortType,\n        sortField\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.state = {\n      value: 'id'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('Your favorite flavor is: ' + this.state.value);\n    this.onSort.bind(null, this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    const body = this.state.isOpen && React.createElement(Table, {\n      data: this.state.data\n      /*onSort={this.onSort} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Change Data Base to :\", React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.isOpen ? 'close' : 'open')), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Sorted by :\", React.createElement(\"select\", {\n      id: \"dropdown\",\n      ref: input => this.menu = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: \"id\",\n      sortField: \"id\",\n      onChange: console.log('id'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"option\", {\n      onChange: this.onChangeSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"User ID\"), React.createElement(\"option\", {\n      value: \"title\",\n      onChange: this.state.sortField = 'title',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"option\", {\n      selected: \"body\",\n      sortField: \"body\",\n      onChange: console.log('Body'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Body\")), React.createElement(\"button\", {\n      onClick: this.onSort.bind(null, this.state.sortField),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"appy\")), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Pick your favorite flavor:\", React.createElement(\"select\", {\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"id\"), React.createElement(\"option\", {\n      value: \"userId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"userId\"), React.createElement(\"option\", {\n      value: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"title\"), React.createElement(\"option\", {\n      value: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"body\"))), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), body);\n  }\n\n}\n/*changeTitle = () => {\n    this.setState({\n        sortField: 'title'\n    })\n}*/\n\n/*class AppComponent extends React.Component {\n    sizes = [ \"X-Small\", \"Small\", \"Medium\", \"Large\", \"X-Large\", \"2X-Large\" ];\n\n    render() {\n        return (\n            <div>\n                <div>T-shirt size:</div>\n                <DropDownList data={this.sizes} />\n            </div>\n        );\n    }\n}\n\n    ReactDOM.render(\n        <AppComponent />,\n        document.querySelector('my-app')\n    ); */\n\n\nexport default Article;","map":{"version":3,"sources":["/Users/Jake/Documents/GitHub/ReactJS/src/components/Article.js"],"names":["React","Component","ReactDOM","Table","$","jQuery","_","Article","componentDidMount","response","fetch","data","json","console","log","setState","onChangeSelect","event","constructor","props","state","isOpen","sort","sortField","onSort","clonedData","concat","sortType","orderedData","orderBy","handleClick","value","handleChange","bind","handleSubmit","target","alert","preventDefault","render","body","input","menu"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,CAAR,EAAUC,MAAV,QAAuB,QAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,sCAAP,C,CACA;AACA;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAE5B,QAAMO,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAKI,QAAL,CAAc;AACVJ,MAAAA,IAAI,EAACA;AADK,KAAd;AAGH;;AAuBDK,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAzBnBC,KAyBmB,GAzBX;AACJC,MAAAA,MAAM,EAAE,KADJ;AAEJV,MAAAA,IAAI,EAAE,EAFF;AAGJW,MAAAA,IAAI,EAAE,KAHF;AAIJC,MAAAA,SAAS,EAAE;AAJP,KAyBW;;AAAA,SAlBnBC,MAkBmB,GAlBVD,SAAS,IAAI;AAClB,YAAME,UAAU,GAAG,KAAKL,KAAL,CAAWT,IAAX,CAAgBe,MAAhB,EAAnB;AACA,YAAMC,QAAQ;AAAI;AAAyC,WAA3D;;AACA,YAAMC,WAAW,GAAGtB,CAAC,CAACuB,OAAF,CAAUJ,UAAV,EAAsBF,SAAtB,EAAiCI,QAAjC,CAApB;;AAEAd,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWG,SAAvB;AAEA,WAAKR,QAAL,CAAc;AACVJ,QAAAA,IAAI,EAAEiB,WADI;AAEVN,QAAAA,IAAI,EAAEK,QAFI;AAGVJ,QAAAA;AAHU,OAAd;AAKH,KAMkB;;AAAA,SA0DnBO,WA1DmB,GA0DL,MAAM;AAChB,WAAKf,QAAL,CAAc;AACVM,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADV,OAAd;AAGH,KA9DkB;;AAEf,SAAKD,KAAL,GAAa;AAACW,MAAAA,KAAK,EAAE;AAAR,KAAb;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACf,KAAD,EAAQ;AAClB,SAAKF,QAAL,CAAc;AAACgB,MAAAA,KAAK,EAAEd,KAAK,CAACkB,MAAN,CAAaJ;AAArB,KAAd;AACD;;AAEDG,EAAAA,YAAY,CAACjB,KAAD,EAAQ;AAClBmB,IAAAA,KAAK,CAAC,8BAA8B,KAAKhB,KAAL,CAAWW,KAA1C,CAAL;AACA,SAAKP,MAAL,CAAYS,IAAZ,CAAiB,IAAjB,EAAuB,KAAKb,KAAL,CAAWW,KAAlC;AACAd,IAAAA,KAAK,CAACoB,cAAN;AACD;;AAEHC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKnB,KAAL,CAAWC,MAAX,IAAqB,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWT;AAAM;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACI;AAAQ,MAAA,OAAO,EAAE,KAAKmB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKV,KAAL,CAAWC,MAAX,GAAoB,OAApB,GAA8B,MADnC,CADJ,CAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAS,MAAA,EAAE,EAAG,UAAd;AAAyB,MAAA,GAAG,EAAKmB,KAAD,IAAU,KAAKC,IAAL,GAAYD,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,QAAQ,EAAC,IAAjB;AAAuB,MAAA,SAAS,EAAC,IAAjC;AAAsC,MAAA,QAAQ,EAAG3B,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAQ,MAAA,QAAQ,EAAG,KAAKE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,QAAQ,EAAG,KAAKI,KAAL,CAAWG,SAAX,GAAuB,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAS,MAAA,QAAQ,EAAC,MAAlB;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAA0C,MAAA,QAAQ,EAAGV,OAAO,CAACC,GAAR,CAAY,MAAZ,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CAFJ,EAQI;AAAQ,MAAA,OAAO,EAAE,KAAKU,MAAL,CAAYS,IAAZ,CAAiB,IAAjB,EAAsB,KAAKb,KAAL,CAAWG,SAAjC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CATJ,EAqBZ;AAAM,MAAA,QAAQ,EAAE,KAAKW,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEE;AAAQ,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWW,KAA1B;AAAiC,MAAA,QAAQ,EAAE,KAAKC,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,EAEJ;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFI,EAGE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAFF,CADV,EAUU;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVV,CArBY,EAiCKO,IAjCL,CADJ;AAqCH;;AA/F2B;AAuG5B;;;;;;AAMJ;;;;;;;;;;;;;;;;;;;AAiBA,eAAehC,OAAf","sourcesContent":["import React, {Component} from 'react'\nimport ReactDOM from 'react-dom';\nimport Table from './Table'\nimport {$,jQuery} from 'jquery'\nimport _ from 'lodash'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n//import { DropDownList } from '@progress/kendo-react-dropdowns';\n//import Dropdown from './Dropdown.js';\n\nclass Article extends Component {\n\n    async componentDidMount() {\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts')\n        const data = await response.json()\n        \n        console.log(data)\n\n        this.setState({\n            data:data\n        })\n    }\n    \n    state = {\n        isOpen: false,\n        data: [],\n        sort: 'asc',\n        sortField: 'title'\n    }\n    \n    onSort = sortField => {\n        const clonedData = this.state.data.concat()\n        const sortType =  /*this.state.sort === 'asc' ? 'desc' :*/ 'asc'\n        const orderedData = _.orderBy(clonedData, sortField, sortType)\n        \n        console.log(this.state.sortField)\n\n        this.setState({\n            data: orderedData,\n            sort: sortType,\n            sortField\n        })\n    }\n\n    onChangeSelect(event) {\n        console.log(event);\n    } \n\n    constructor(props) {\n        super(props);\n        this.state = {value: 'id'};\n        \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n    \n      handleSubmit(event) {\n        alert('Your favorite flavor is: ' + this.state.value);\n        this.onSort.bind(null, this.state.value)\n        event.preventDefault();\n      }\n\n    render() {\n        const body = this.state.isOpen && <Table data={this.state.data} /*onSort={this.onSort} *//>\n        return (\n            <div>\n               \n                <h2>Change Data Base to : \n                    <button onClick={this.handleClick}>\n                        {this.state.isOpen ? 'close' : 'open'}\n                    </button>\n                </h2>\n\n\n                <h4>\n                    Sorted by : \n                    <select  id = \"dropdown\" ref = {(input)=> this.menu = input}>\n                        <option selected='id'  sortField='id' onChange ={console.log('id')}>ID</option>\n                        <option onChange ={this.onChangeSelect}>User ID</option>\n                        <option value=\"title\" onChange ={this.state.sortField = 'title'} >Title</option>\n                        <option  selected='body' sortField='body' onChange ={console.log('Body')}>Body</option>\n                    </select>\n                    <button onClick={this.onSort.bind(null,this.state.sortField)}>appy</button>\n                </h4>\n\n\n<form onSubmit={this.handleSubmit}>\n          <label>\n            Pick your favorite flavor:\n            <select value={this.state.value} onChange={this.handleChange}>\n        <option value=\"id\">id</option>\n        <option value=\"userId\">userId</option>\n              <option value=\"title\">title</option>\n              <option value=\"body\">body</option>\n            </select>\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n                {body}\n            </div>\n        )\n    } \n    handleClick = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n    }\n\n    /*changeTitle = () => {\n        this.setState({\n            sortField: 'title'\n        })\n    }*/\n\n/*class AppComponent extends React.Component {\n    sizes = [ \"X-Small\", \"Small\", \"Medium\", \"Large\", \"X-Large\", \"2X-Large\" ];\n\n    render() {\n        return (\n            <div>\n                <div>T-shirt size:</div>\n                <DropDownList data={this.sizes} />\n            </div>\n        );\n    }\n}\n\n    ReactDOM.render(\n        <AppComponent />,\n        document.querySelector('my-app')\n    ); */\nexport default Article"]},"metadata":{},"sourceType":"module"}