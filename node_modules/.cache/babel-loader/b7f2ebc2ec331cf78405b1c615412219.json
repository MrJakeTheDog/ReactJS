{"ast":null,"code":"var _jsxFileName = \"/Users/Jake/Documents/GitHub/ReactJS/src/components/Article.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from './Table';\nimport { $, jQuery } from 'jquery';\nimport _ from 'lodash';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import { DropDownList } from '@progress/kendo-react-dropdowns';\n//import Dropdown from './Dropdown.js';\n\nclass Article extends Component {\n  async componentDidMount() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      data: data\n    });\n  }\n\n  onSort(event) //= sortField => {\n  {\n    const clonedData = this.state.data.concat();\n    const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\n    var sortField = this.state.value;\n\n    const orderedData = _.orderBy(clonedData, sortField, sortType);\n\n    console.log(sortField);\n    this.setState({\n      data: orderedData,\n      sort: sortType,\n      sortField: sortField\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      data: [],\n      sort: 'asc',\n      sortField: 'id'\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.state = {\n      value: 'id'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onSort = this.onSort.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('Your favorite flavor is: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    const body = this.state.isOpen && React.createElement(Table, {\n      data: this.state.data\n      /*onSort={this.onSort} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Change Data Base to :\", React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.isOpen ? 'close' : 'open')), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Sorted by :\", React.createElement(\"select\", {\n      id: \"dropdown\",\n      ref: input => this.menu = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: \"id\",\n      sortField: \"id\"\n      /*onSelect ={this.onSort.bind(null,'id')} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"option\", {\n      onClick: this.onSort.bind(null, 'userId'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"User ID \", this.state.sortField = 'userId'), React.createElement(\"option\", {\n      selected: true,\n      value: \"title\",\n      onKeyPress: this.onSort.bind(null, 'title')\n      /*onSelect ={this.changeTitle}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"option\", {\n      selected: \"body\",\n      sortField: \"body\"\n      /*onSelect ={this.onSort.bind(null,'body')}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Body\")), React.createElement(\"input\", {\n      type: \"submit\",\n      sortField: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onSort.bind(null, this.state.sortField),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"appy\")), React.createElement(\"form\", {\n      onSubmit: this.onSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Pick your favorite flavor:\", React.createElement(\"select\", {\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"id\"), React.createElement(\"option\", {\n      value: \"userId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"userId\"), React.createElement(\"option\", {\n      value: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"title\"), React.createElement(\"option\", {\n      value: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"body\"))), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), body);\n  }\n\n}\n/*changeTitle = () => {\n    this.setState({\n        sortField: 'title'\n    })\n}*/\n\n/*class AppComponent extends React.Component {\n    sizes = [ \"X-Small\", \"Small\", \"Medium\", \"Large\", \"X-Large\", \"2X-Large\" ];\n\n    render() {\n        return (\n            <div>\n                <div>T-shirt size:</div>\n                <DropDownList data={this.sizes} />\n            </div>\n        );\n    }\n}\n\n    ReactDOM.render(\n        <AppComponent />,\n        document.querySelector('my-app')\n    ); */\n\n\nexport default Article;","map":{"version":3,"sources":["/Users/Jake/Documents/GitHub/ReactJS/src/components/Article.js"],"names":["React","Component","ReactDOM","Table","$","jQuery","_","Article","componentDidMount","response","fetch","data","json","console","log","setState","onSort","event","clonedData","state","concat","sortType","sort","sortField","value","orderedData","orderBy","constructor","props","isOpen","handleClick","handleChange","bind","handleSubmit","target","alert","preventDefault","render","body","input","menu"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,CAAR,EAAUC,MAAV,QAAuB,QAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,sCAAP,C,CACA;AACA;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAE5B,QAAMO,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAKI,QAAL,CAAc;AACVJ,MAAAA,IAAI,EAACA;AADK,KAAd;AAGH;;AASDK,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV;AACA,UAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWR,IAAX,CAAgBS,MAAhB,EAAnB;AACA,UAAMC,QAAQ,GAAI,KAAKF,KAAL,CAAWG,IAAX,KAAoB,KAApB,GAA4B,MAA5B,GAAqC,KAAvD;AACA,QAAIC,SAAS,GAAG,KAAKJ,KAAL,CAAWK,KAA3B;;AACA,UAAMC,WAAW,GAAGnB,CAAC,CAACoB,OAAF,CAAUR,UAAV,EAAsBK,SAAtB,EAAiCF,QAAjC,CAApB;;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;AAEA,SAAKR,QAAL,CAAc;AACVJ,MAAAA,IAAI,EAAEc,WADI;AAEVH,MAAAA,IAAI,EAAED,QAFI;AAGVE,MAAAA,SAAS,EAAEA;AAHD,KAAd;AAKH;;AAEDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAvBnBT,KAuBmB,GAvBX;AACJU,MAAAA,MAAM,EAAE,KADJ;AAEJlB,MAAAA,IAAI,EAAE,EAFF;AAGJW,MAAAA,IAAI,EAAE,KAHF;AAIJC,MAAAA,SAAS,EAAE;AAJP,KAuBW;;AAAA,SAuDnBO,WAvDmB,GAuDL,MAAM;AAChB,WAAKf,QAAL,CAAc;AACVc,QAAAA,MAAM,EAAE,CAAC,KAAKV,KAAL,CAAWU;AADV,OAAd;AAGH,KA3DkB;;AAEf,SAAKV,KAAL,GAAa;AAACK,MAAAA,KAAK,EAAE;AAAR,KAAb;AAEA,SAAKO,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKhB,MAAL,GAAc,KAAKA,MAAL,CAAYgB,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDD,EAAAA,YAAY,CAACd,KAAD,EAAQ;AAClB,SAAKF,QAAL,CAAc;AAACS,MAAAA,KAAK,EAAEP,KAAK,CAACiB,MAAN,CAAaV;AAArB,KAAd;AACD;;AAEDS,EAAAA,YAAY,CAAChB,KAAD,EAAQ;AAClBkB,IAAAA,KAAK,CAAC,8BAA8B,KAAKhB,KAAL,CAAWK,KAA1C,CAAL;AACAP,IAAAA,KAAK,CAACmB,cAAN;AACD;;AAEHC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKnB,KAAL,CAAWU,MAAX,IAAqB,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWR;AAAM;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlC;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACI;AAAQ,MAAA,OAAO,EAAE,KAAKmB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,KAAL,CAAWU,MAAX,GAAoB,OAApB,GAA8B,MADnC,CADJ,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEA;AAAS,MAAA,EAAE,EAAG,UAAd;AAAyB,MAAA,GAAG,EAAKU,KAAD,IAAU,KAAKC,IAAL,GAAYD,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,QAAQ,EAAC,IAAjB;AAAuB,MAAA,SAAS,EAAC;AAAK;AAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAEZ;AAAQ,MAAA,OAAO,EAAE,KAAKvB,MAAL,CAAYgB,IAAZ,CAAiB,IAAjB,EAAsB,QAAtB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA4D,KAAKb,KAAL,CAAWI,SAAX,GAAuB,QAAnF,CAFY,EAGZ;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,OAAvB;AAA+B,MAAA,UAAU,EAAG,KAAKP,MAAL,CAAYgB,IAAZ,CAAiB,IAAjB,EAAsB,OAAtB;AAAgC;AAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHY,EAIZ;AAAS,MAAA,QAAQ,EAAC,MAAlB;AAAyB,MAAA,SAAS,EAAC;AAAO;AAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJY,CAFA,EAQhB;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARgB,EAShB;AAAQ,MAAA,OAAO,EAAE,KAAKhB,MAAL,CAAYgB,IAAZ,CAAiB,IAAjB,EAAsB,KAAKb,KAAL,CAAWI,SAAjC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATgB,CAPJ,EAkBZ;AAAM,MAAA,QAAQ,EAAE,KAAKP,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEE;AAAQ,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWK,KAA1B;AAAiC,MAAA,QAAQ,EAAE,KAAKO,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAFF,CADV,EAUU;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVV,CAlBY,EA8BKO,IA9BL,CADJ;AAkCH;;AA1F2B;AAkG5B;;;;;;AAMJ;;;;;;;;;;;;;;;;;;;AAiBA,eAAe/B,OAAf","sourcesContent":["import React, {Component} from 'react'\nimport ReactDOM from 'react-dom';\nimport Table from './Table'\nimport {$,jQuery} from 'jquery'\nimport _ from 'lodash'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n//import { DropDownList } from '@progress/kendo-react-dropdowns';\n//import Dropdown from './Dropdown.js';\n\nclass Article extends Component {\n\n    async componentDidMount() {\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts')\n        const data = await response.json()\n        \n        console.log(data)\n\n        this.setState({\n            data:data\n        })\n    }\n    \n    state = {\n        isOpen: false,\n        data: [],\n        sort: 'asc',\n        sortField: 'id'\n    }\n    \n    onSort(event) //= sortField => {\n        {\n        const clonedData = this.state.data.concat()\n        const sortType =  this.state.sort === 'asc' ? 'desc' : 'asc'\n        var sortField = this.state.value\n        const orderedData = _.orderBy(clonedData, sortField, sortType)\n        \n        console.log(sortField)\n\n        this.setState({\n            data: orderedData,\n            sort: sortType,\n            sortField: sortField\n        })\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {value: 'id'};\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onSort = this.onSort.bind(this);\n      }\n    \n      handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n    \n      handleSubmit(event) {\n        alert('Your favorite flavor is: ' + this.state.value);\n        event.preventDefault();\n      }\n\n    render() {\n        const body = this.state.isOpen && <Table data={this.state.data} /*onSort={this.onSort} *//>\n        return (\n            <div>\n               \n                <h2>Change Data Base to : \n                    <button onClick={this.handleClick}>\n                        {this.state.isOpen ? 'close' : 'open'}\n                    </button>\n                </h2>\n                <h4>\n                Sorted by : \n                <select  id = \"dropdown\" ref = {(input)=> this.menu = input}>\n                <option selected='id'  sortField='id' /*onSelect ={this.onSort.bind(null,'id')} */>ID</option>\n    <option onClick={this.onSort.bind(null,'userId')} >User ID {this.state.sortField = 'userId'}</option>\n    <option selected value=\"title\" onKeyPress ={this.onSort.bind(null,'title')} /*onSelect ={this.changeTitle}*/>Title</option>\n    <option  selected='body' sortField='body' /*onSelect ={this.onSort.bind(null,'body')}*/>Body</option>\n</select>\n<input type=\"submit\" sortField= 'id' />\n<button onClick={this.onSort.bind(null,this.state.sortField)}>appy</button>\n</h4>\n<form onSubmit={this.onSort}>\n          <label>\n            Pick your favorite flavor:\n            <select value={this.state.value} onChange={this.handleChange}>\n              <option value=\"id\">id</option>\n              <option value=\"userId\">userId</option>\n              <option value=\"title\">title</option>\n              <option value=\"body\">body</option>\n            </select>\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n                {body}\n            </div>\n        )\n    } \n    handleClick = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n    }\n\n    /*changeTitle = () => {\n        this.setState({\n            sortField: 'title'\n        })\n    }*/\n\n/*class AppComponent extends React.Component {\n    sizes = [ \"X-Small\", \"Small\", \"Medium\", \"Large\", \"X-Large\", \"2X-Large\" ];\n\n    render() {\n        return (\n            <div>\n                <div>T-shirt size:</div>\n                <DropDownList data={this.sizes} />\n            </div>\n        );\n    }\n}\n\n    ReactDOM.render(\n        <AppComponent />,\n        document.querySelector('my-app')\n    ); */\nexport default Article"]},"metadata":{},"sourceType":"module"}