{"ast":null,"code":"var _jsxFileName = \"/Users/Jake/Documents/GitHub/ReactJS/src/components/Article.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from './Table';\nimport { $, jQuery } from 'jquery';\nimport _ from 'lodash';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import { DropDownList } from '@progress/kendo-react-dropdowns';\n//import Dropdown from './Dropdown.js';\n\nclass Article extends Component {\n  async componentDidMount() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      data: data\n    });\n  }\n\n  changeField() {\n    this.state.sortField = 'title';\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      data: [],\n      sort: 'asc',\n      sortField: 'id'\n    };\n\n    this.onSort = sortField => {\n      const clonedData = this.state.data.concat();\n      const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\n\n      const orderedData = _.orderBy(clonedData, sortField, sortType);\n\n      console.log(sortField);\n      this.setState({\n        data: orderedData,\n        sort: sortType,\n        sortField: sortField\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.state = {\n      value: 'coconut'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('Your favorite flavor is: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    const body = this.state.isOpen && React.createElement(Table, {\n      data: this.state.data\n      /*onSort={this.onSort} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Change Data Base to :\", React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.isOpen ? 'close' : 'open')), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Sorted by :\", React.createElement(\"select\", {\n      id: \"dropdown\",\n      ref: input => this.menu = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      selected: \"id\",\n      sortField: \"id\"\n      /*onSelect ={this.onSort.bind(null,'id')} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"option\", {\n      onClick: this.onSort.bind(null, 'userId'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"User ID \", this.state.sortField = 'userId'), React.createElement(\"option\", {\n      selected: true,\n      value: \"title\",\n      onKeyPress: this.onSort.bind(null, 'title')\n      /*onSelect ={this.changeTitle}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Title\", this.changeField), React.createElement(\"option\", {\n      selected: \"body\",\n      sortField: \"body\"\n      /*onSelect ={this.onSort.bind(null,'body')}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Body\")), React.createElement(\"input\", {\n      type: \"submit\",\n      sortField: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onSort.bind(null, this.state.sortField),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"appy\")), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Pick your favorite flavor:\", React.createElement(\"select\", {\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"grapefruit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Grapefruit\"), React.createElement(\"option\", {\n      value: \"lime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Lime\"), React.createElement(\"option\", {\n      value: \"coconut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Coconut\"), React.createElement(\"option\", {\n      value: \"mango\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Mango\"))), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), body);\n  }\n\n}\n/*changeTitle = () => {\n    this.setState({\n        sortField: 'title'\n    })\n}*/\n\n/*class AppComponent extends React.Component {\n    sizes = [ \"X-Small\", \"Small\", \"Medium\", \"Large\", \"X-Large\", \"2X-Large\" ];\n\n    render() {\n        return (\n            <div>\n                <div>T-shirt size:</div>\n                <DropDownList data={this.sizes} />\n            </div>\n        );\n    }\n}\n\n    ReactDOM.render(\n        <AppComponent />,\n        document.querySelector('my-app')\n    ); */\n\n\nexport default Article;","map":{"version":3,"sources":["/Users/Jake/Documents/GitHub/ReactJS/src/components/Article.js"],"names":["React","Component","ReactDOM","Table","$","jQuery","_","Article","componentDidMount","response","fetch","data","json","console","log","setState","changeField","state","sortField","constructor","props","isOpen","sort","onSort","clonedData","concat","sortType","orderedData","orderBy","handleClick","value","handleChange","bind","handleSubmit","event","target","alert","preventDefault","render","body","input","menu"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport ReactDOM from 'react-dom';\nimport Table from './Table'\nimport {$,jQuery} from 'jquery'\nimport _ from 'lodash'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n//import { DropDownList } from '@progress/kendo-react-dropdowns';\n//import Dropdown from './Dropdown.js';\n\nclass Article extends Component {\n\n    async componentDidMount() {\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts')\n        const data = await response.json()\n        \n        console.log(data)\n\n        this.setState({\n            data:data\n        })\n    }\n    \n    state = {\n        isOpen: false,\n        data: [],\n        sort: 'asc',\n        sortField: 'id'\n    }\n\n    changeField(){\n        this.state.sortField = 'title'\n    }\n    \n    onSort = sortField => {\n        const clonedData = this.state.data.concat()\n        const sortType =  this.state.sort === 'asc' ? 'desc' : 'asc'\n        const orderedData = _.orderBy(clonedData, sortField, sortType)\n        \n        console.log(sortField)\n\n        this.setState({\n            data: orderedData,\n            sort: sortType,\n            sortField: sortField\n        })\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {value: 'coconut'};\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n    \n      handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n    \n      handleSubmit(event) {\n        alert('Your favorite flavor is: ' + this.state.value);\n        event.preventDefault();\n      }\n\n    render() {\n        const body = this.state.isOpen && <Table data={this.state.data} /*onSort={this.onSort} *//>\n        return (\n            <div>\n               \n                <h2>Change Data Base to : \n                    <button onClick={this.handleClick}>\n                        {this.state.isOpen ? 'close' : 'open'}\n                    </button>\n                </h2>\n                <h4>\n                Sorted by : \n                <select  id = \"dropdown\" ref = {(input)=> this.menu = input}>\n                <option selected='id'  sortField='id' /*onSelect ={this.onSort.bind(null,'id')} */>ID</option>\n    <option onClick={this.onSort.bind(null,'userId')} >User ID {this.state.sortField = 'userId'}</option>\n    <option selected value=\"title\" onKeyPress ={this.onSort.bind(null,'title')} /*onSelect ={this.changeTitle}*/>Title{this.changeField}</option>\n    <option  selected='body' sortField='body' /*onSelect ={this.onSort.bind(null,'body')}*/>Body</option>\n</select>\n<input type=\"submit\" sortField= 'id' />\n<button onClick={this.onSort.bind(null,this.state.sortField)}>appy</button>\n</h4>\n<form onSubmit={this.handleSubmit}>\n          <label>\n            Pick your favorite flavor:\n            <select value={this.state.value} onChange={this.handleChange}>\n              <option value=\"grapefruit\">Grapefruit</option>\n              <option value=\"lime\">Lime</option>\n              <option value=\"coconut\">Coconut</option>\n              <option value=\"mango\">Mango</option>\n            </select>\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n                {body}\n            </div>\n        )\n    } \n    handleClick = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n    }\n\n    /*changeTitle = () => {\n        this.setState({\n            sortField: 'title'\n        })\n    }*/\n\n/*class AppComponent extends React.Component {\n    sizes = [ \"X-Small\", \"Small\", \"Medium\", \"Large\", \"X-Large\", \"2X-Large\" ];\n\n    render() {\n        return (\n            <div>\n                <div>T-shirt size:</div>\n                <DropDownList data={this.sizes} />\n            </div>\n        );\n    }\n}\n\n    ReactDOM.render(\n        <AppComponent />,\n        document.querySelector('my-app')\n    ); */\nexport default Article"]},"metadata":{},"sourceType":"module"}